# -*- coding: utf-8 -*-
"""dashboard

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ejgty29i6CIwdwx9g22t2EC23oqQ01a9
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from lifelines import KaplanMeierFitter

# Judul dashboard
st.title('Customer Segmentation Dashboard')

# Load data
customers_df = pd.read_csv('./data/customers_dataset.csv')
geolocation_df = pd.read_csv('./data/geolocation_dataset.csv')
orders_df = pd.read_csv('./data/orders_dataset.csv')
all_data_df = pd.read_csv('all_data.csv')

# --- RFM Calculations ---

# 1. Recency
all_data_df['order_purchase_timestamp'] = pd.to_datetime(all_data_df['order_purchase_timestamp'])
current_date = pd.to_datetime(all_data_df['order_purchase_timestamp'].max())

# Hitung recency (selisih waktu antara tanggal pembelian terakhir dan tanggal acuan)
all_data_df['recency'] = (current_date - pd.to_datetime(all_data_df['order_purchase_timestamp'])).dt.days

# Hitung R-score (quantile recency)
all_data_df['r_score'] = pd.qcut(all_data_df['recency'], 5, labels=[5, 4, 3, 2, 1], duplicates='drop')

# 2. Frequency
frequency = all_data_df.groupby('customer_id')['order_id'].nunique().reset_index()
frequency.columns = ['customer_id', 'frequency']
all_data_df = pd.merge(all_data_df, frequency, on='customer_id', how='left')

num_unique_freq = all_data_df['frequency'].nunique()
num_quantiles = min(5, num_unique_freq)

if num_unique_freq > 1:
    all_data_df['f_score'] = pd.qcut(all_data_df['frequency'], q=num_quantiles, labels=False, duplicates='drop') + 1
else:
    all_data_df['f_score'] = 1

# 3. Monetary (menggunakan frequency sebagai Monetary)
all_data_df['monetary'] = all_data_df['frequency']
num_unique_monetary = all_data_df['monetary'].nunique()

if num_unique_monetary > 4:
    bins = [0, 1, 2, 3, float('inf')]
    labels = [1, 2, 3, 4]
    all_data_df['m_score'] = pd.cut(all_data_df['monetary'], bins=bins, labels=labels, include_lowest=True, duplicates='drop')
else:
    all_data_df['m_score'] = all_data_df['monetary'].astype(int)

# 4. Gabungkan RFM Score
all_data_df['rfm_score'] = all_data_df['r_score'].astype(str) + all_data_df['f_score'].astype(str) + all_data_df['m_score'].astype(str)

# 5. Segmentasi Pelanggan
all_data_df['segment'] = pd.cut(all_data_df['rfm_score'].astype(int), bins=[0, 333, 444, 555, float('inf')], labels=['Low', 'Mid', 'High', 'Top'])

st.write("""
## Selamat Datang di Dashboard Segmentasi Pelanggan!

Dashboard ini memberikan wawasan tentang perilaku pelanggan dan segmentasi menggunakan analisis RFM.
RFM (Recency, Frequency, Monetary) adalah teknik pemasaran yang digunakan untuk mengukur dan mengelompokkan pelanggan berdasarkan riwayat pembelian mereka.

**Recency (R):** Seberapa baru pelanggan melakukan pembelian.
**Frequency (F):** Seberapa sering pelanggan melakukan pembelian.
**Monetary (M):** Berapa banyak uang yang dibelanjakan pelanggan untuk pembelian.

Dengan menganalisis metrik ini, kita dapat mengidentifikasi segmen pelanggan yang berharga dan menyesuaikan strategi pemasaran dengan kebutuhan spesifik mereka.
""")

# --- Visualisasi ---

# 1. Distribution of Customers by RFM Segment (Bar Chart)
st.subheader('Customer Segmentation')
st.write("""
Diagram batang ini menunjukkan distribusi pelanggan di berbagai segmen RFM.
Segmen dikategorikan sebagai 'Rendah', 'Sedang', 'Tinggi', dan 'Teratas' berdasarkan skor RFM mereka.
""")
plt.figure(figsize=(10, 6))
sns.countplot(x='segment', data=all_data_df, order=['Low', 'Mid', 'High', 'Top'])
plt.title('Distribution of Customers by RFM Segment')
plt.xlabel('RFM Segment')
plt.ylabel('Number of Customers')
st.pyplot(plt)

# 2. RFM Segmentation Heatmap
st.subheader('RFM Segmentation Heatmap')
st.write("""
Heatmap ini memvisualisasikan rata-rata skor RFM untuk setiap segmen pelanggan.
Warna yang lebih gelap menunjukkan skor yang lebih tinggi, menyoroti karakteristik utama dari setiap segmen.
""")
rfm_heatmap = all_data_df.pivot_table(values='customer_id', index='segment', columns=['r_score', 'f_score', 'm_score'], aggfunc='count')
rfm_heatmap = rfm_heatmap.div(rfm_heatmap.sum(axis=1), axis=0)
plt.figure(figsize=(12, 8))
sns.heatmap(rfm_heatmap, annot=True, cmap='YlGnBu', fmt='.2f')
plt.title('RFM Segmentation Heatmap')
plt.xlabel('RFM Scores')
plt.ylabel('RFM Segment')
st.pyplot(plt)

# 3. Peta Persebaran Customers
st.subheader('Peta Persebaran Customers')
st.write("""
Peta ini memvisualisasikan persebaran pelanggan berdasarkan latitude dan longtitude.
""")
customers_geolocation_df = pd.merge(
    left=customers_df,
    right=geolocation_df,
    how="left",
    left_on="customer_zip_code_prefix",
    right_on="geolocation_zip_code_prefix"
)
plt.figure(figsize=(10, 6))
sns.scatterplot(x='geolocation_lng', y='geolocation_lat', data=customers_geolocation_df)
plt.title('Distribution of Customers Based on Latitude and Longitude')
st.pyplot(plt)

# 4. Peta Order Frequency Negara
st.subheader('Peta Order Frequency Negara')
st.write("""
Peta ini memvisualisasikan frekuensi atau nilai pesanan per kota/negara. Warna daerah pada peta menujukan intensitas frekuensi/nilai pesanan.
""")
state_data = all_data_df.groupby('customer_state_x')['order_id'].nunique().reset_index()
state_data.columns = ['state', 'order_frequency']

# Buat peta korelasi
fig = px.choropleth(state_data,
                    locations='state',
                    locationmode="USA-states",
                    color='order_frequency',
                    scope="usa",
                    title='Order Frequency by State')
st.plotly_chart(fig)
st.write("""
Diagram ini menunjukan frekuensi pesanan di 10 negara tertinggi berdasarkan order valuenya
""")
city_data = all_data_df.groupby('customer_city_x')['order_id'].nunique().sort_values(ascending=False).head(10)

# Buat horizontal bar chart
plt.figure(figsize=(10, 6))
sns.barplot(x=city_data.values, y=city_data.index, orient='h')
plt.title('Top 10 Cities by Order Value')
plt.xlabel('Total Order Value')
plt.ylabel('City')
st.pyplot(plt)